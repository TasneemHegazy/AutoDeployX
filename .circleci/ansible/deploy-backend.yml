---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
  environment:
    NODE_ENV: "{{ lookup('env','NODE_ENV') }}"
    VERSION: "{{ lookup('env','VERSION') }}"
    ENVIRONMENT: "{{ lookup('env','ENVIRONMENT') }}" 
    TYPEORM_CONNECTION: "{{ lookup('env','TYPEORM_CONNECTION') }}"
    TYPEORM_HOST: "{{ lookup('env','TYPEORM_HOST') }}"
    TYPEORM_USERNAME: "{{ lookup('env','TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env','TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env','TYPEORM_DATABASE') }}"
    TYPEORM_PORT: "{{ lookup('env','TYPEORM_PORT') }}"
    TYPEORM_ENTITIES: "{{ lookup('env','TYPEORM_ENTITIES') }}"
  roles:
    - deploy
    
    # ---

# - name: "configuration play." 
#   hosts: web
#   remote_user: ubuntu
#   become: true
#   become_method: sudo
#   become_user: root
#   gather_facts: false
#   vars:
#     ansible_python_interpreter: /usr/bin/python3
#     ansible_host_key_checking: false
#     ansible_stdout_callback: yaml
  
#   environment:
#     NODE_ENV: production
#     VERSION: "1"
#     ENVIRONMENT: "production"
#     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR') }}"
#     TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
#     TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
#     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

#   pre_tasks:
#     - name: "wait 600 seconds for target connection to become reachable/usable."
#       wait_for_connection:
#         timeout: 600

#     - name: "install python for Ansible."
#       become: true
#       apt:
#         name: python3
#         state: latest
      # raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      # changed_when: false

  
  # roles:
  #   - deploy




# - name: "configuration play." 
#   hosts: web
#   user: ubuntu
#   gather_facts: false
#   vars:
#     - ansible_python_interpreter: /usr/bin/python3
#     - ansible_host_key_checking: false
#     - ansible_stdout_callback: yaml
  
#   environment:
#     NODE_ENV: production
#     VERSION: "1"
#     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     TYPEORM_MIGRATION_DIR: "{{ lookup('env', 'TYPEORM_MIGRATION_DIR') }}"
#     TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
#     TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
#     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"  


#   pre_tasks:
#     - name: "Wait 600 seconds for the target connection to be reachable"
#       wait_for_connection:
#         timeout: 600
 
#     - name: "Install python for ansible"
#       become: true
#       raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
#       changed_when: false
      



#   roles:
#     - deploy
